export const defaultSettings = {
  "_comment_main_ui": "Settings for the main Hermes UI appearance.",
  "hermesBorderThickness": "1px",
  "_comment_hermesBorderThickness": "Thickness of the main Hermes UI border. Default: '1px'. Recommended: '1px' to '3px'.",
  "_comment_effects": "Settings for visual effects. Note: Excessive values might impact performance.",
  "effects": {
  "_comment_lasers_v13": "Settings for the 'Classic Laser' effect.",
  "lasersV13": {
    "lineThickness": 2,
    "_comment_lineThickness": "Thickness of each laser line in pixels. Default: 2. Range: 1-10.",
    "transparency": 0.3,
    "_comment_transparency": "Opacity of laser lines. Default: 0.3. Range: 0.1-1.0.",
    "colors": [
    "rgba(255,0,0,{alpha})",
    "rgba(0,255,0,{alpha})",
    "rgba(0,0,255,{alpha})"
    ],
    "_comment_colors": "Array of colors for laser lines. Use RGBA format with '{alpha}' for transparency. Default: Red, Green, Blue. Example: ['rgba(255,0,0,{alpha})'].",
    "numLines": 3,
    "_comment_numLines": "Number of laser lines on screen. Default: 3. Range: 1-10 (more can impact performance)."
  },
  "_comment_snowflakes_v13": "Settings for the 'Snowflake' effect.",
  "snowflakesV13": {
    "density": 50,
    "_comment_density": "Number of snowflakes. Default: 50. Range: 10-200 (higher values impact performance).",
    "baseColor": "rgba(240, 240, 240, {alpha})",
    "_comment_baseColor": "Base color for snowflakes. Use RGBA with '{alpha}'. Default: 'rgba(240, 240, 240, {alpha})'.",
    "emoji": "\u2744\ufe0f",
    "_comment_emoji": "Emoji(s) to use for snowflakes. Default: '\u2744\ufe0f'. Paste your preferred emoji or a list like ['\u2744\ufe0f', '\u2745', '\u2746']. If using text/emoji, set baseColor alpha to 0 or use an emoji font that renders well.",
    "useEmojiOrShape": "emoji",
    "_comment_useEmojiOrShape": "Determines if snowflakes are rendered as 'emoji' or 'shape' (using baseColor). Default: 'emoji'.",
    "minSize": 1,
    "_comment_minSize": "Minimum size of snowflakes (pixels for shape, arbitrary unit for emoji). Default: 1. Range: 1-5.",
    "maxSize": 3,
    "_comment_maxSize": "Maximum size of snowflakes. Default: 3. Range: 1-10.",
    "minSpeed": 0.5,
    "_comment_minSpeed": "Minimum falling speed. Default: 0.5. Range: 0.1-5.",
    "maxSpeed": 1.5,
    "_comment_maxSpeed": "Maximum falling speed. Default: 1.5. Range: 0.1-5.",
    "opacityMin": 0.3,
    "_comment_opacityMin": "Minimum opacity for snowflake shapes. Default: 0.3. Range: 0.1-1.0.",
    "opacityMax": 0.8,
    "_comment_opacityMax": "Maximum opacity for snowflake shapes. Default: 0.8. Range: 0.1-1.0.",
    "font": "1em sans-serif",
    "_comment_font": "Font used for rendering emoji snowflakes. Adjust size with min/maxSize. Default: '1em sans-serif'."
  },
  "_comment_lasers_v14": "Settings for the 'Simple Laser' (falling rain) effect.",
  "lasersV14": {
    "density": 0.05,
    "_comment_density": "Chance (0.0 to 1.0) to spawn a new laser each frame. Default: 0.05. Range: 0.01-0.2.",
    "maxLength": 70,
    "_comment_maxLength": "Maximum length of a laser line. Default: 70. Range: 10-200.",
    "minLength": 20,
    "_comment_minLength": "Minimum length of a laser line. Default: 20. Range: 5-100.",
    "maxSpeed": 15,
    "_comment_maxSpeed": "Maximum falling speed. Default: 15. Range: 1-50.",
    "minSpeed": 5,
    "_comment_minSpeed": "Minimum falling speed. Default: 5. Range: 1-30.",
    "color": "rgba(255, 0, 0, 0.7)",
    "_comment_color": "Color of the V14 lasers. Default: 'rgba(255, 0, 0, 0.7)'.",
    "lineWidth": 2,
    "_comment_lineWidth": "Line width for V14 lasers. Default: 2. Range: 1-5."
  },
  "_comment_strobe_v13": "Settings for the 'Classic Strobe' effect.",
  "strobeV13": {
    "speed": 0.1,
    "_comment_speed": "Speed of color transition/strobe pulse. Default: 0.1. Range: 0.01-0.5.",
    "minOpacity": 0.4,
    "_comment_minOpacity": "Minimum opacity during strobe. Default: 0.4. Range: 0.0-1.0.",
    "maxOpacityFactor": 0.3,
    "_comment_maxOpacityFactor": "Factor determining peak opacity from base. Default: 0.3. Range: 0.0-1.0.",
    "color1": "rgba(255, 0, 0, {alpha})",
    "_comment_color1": "First color for the strobe. Default: 'rgba(255, 0, 0, {alpha})'.",
    "color2": "rgba(0, 0, 255, {alpha})",
    "_comment_color2": "Second color for the strobe. Default: 'rgba(0, 0, 255, {alpha})'."
  },
  "_comment_strobe_v14": "Settings for the 'Simple Strobe' effect.",
  "strobeV14": {
    "speed": 0.1,
    "_comment_speed": "Speed of opacity pulse. Default: 0.1. Range: 0.01-0.5.",
    "maxOpacity": 0.2,
    "_comment_maxOpacity": "Maximum opacity during strobe. Default: 0.2. Range: 0.0-1.0.",
    "color": "rgba(255, 255, 255, {alpha})",
  "_comment_color": "Color for the simple strobe. Default: 'rgba(255, 255, 255, {alpha})'."
  },
  "_comment_confetti": "Settings for the 'Confetti' effect.",
  "confetti": {
    "density": 40,
    "_comment_density": "Number of confetti pieces. Default: 40. Range: 10-200.",
    "colors": ["#ff0000", "#00ff00", "#0000ff", "#ffff00", "#ff00ff"],
    "_comment_colors": "Array of colors for confetti squares.",
    "size": 6,
    "_comment_size": "Base size of confetti pieces in pixels.",
    "gravity": 0.5,
    "_comment_gravity": "Falling speed factor.",
    "drift": 0.3,
    "_comment_drift": "Sideways drift factor."
  },
  "_comment_bubbles": "Settings for the 'Bubbles' effect.",
  "bubbles": {
    "density": 40,
    "_comment_density": "Number of bubbles. Default: 40. Range: 5-200.",
    "sizeMin": 2,
    "_comment_sizeMin": "Minimum bubble size in pixels. Default: 2.",
    "sizeMax": 6,
    "_comment_sizeMax": "Maximum bubble size in pixels. Default: 6.",
    "speedMin": 0.5,
    "_comment_speedMin": "Minimum rising speed. Default: 0.5.",
    "speedMax": 1.5,
    "_comment_speedMax": "Maximum rising speed. Default: 1.5.",
    "color": "rgba(173,216,230,0.7)",
    "_comment_color": "Color of bubbles. Default: 'rgba(173,216,230,0.7)'."
  }
  },
  "_comment_syncInterval": "Minutes between automatic sync with server. 0 disables.",
  "syncInterval": 0,
  "_comment_macro": "Settings for macro recording/playback and heuristics.",
  "macro": {
  "recordMouseMoves": false,
  "_comment_recordMouseMoves": "Record mousemove events while recording macros. Default: false.",
  "mouseMoveInterval": 200,
  "_comment_mouseMoveInterval": "Minimum time in ms between recorded mousemove events. Default: 200.",
  "relativeCoordinates": true,
  "_comment_relativeCoordinates": "Adjust recorded coordinates based on current element position.",
  "useCoordinateFallback": false,
  "_comment_useCoordinateFallback": "When elements can't be found by selector, use recorded x/y coordinates or DOM path.",
  "similarityThreshold": 0.5,
  "_comment_similarityThreshold": "Minimum similarity score (0-1) for heuristic field matching. Default: 0.5.",
  "selectorWaitTimeout": 5000,
  "_comment_selectorWaitTimeout": "Default timeout in ms for waitForSelector events. Default: 5000.",
  "networkIdleTimeout": 2000,
  "_comment_networkIdleTimeout": "Default timeout in ms for waitForNetworkIdle events. Default: 2000."
  },
  "_comment_recordHotkey": "Key combo to start/stop recording (e.g., Ctrl+Shift+R).",
  "recordHotkey": "Ctrl+Shift+R",
  "_comment_playMacroHotkey": "Key combo to play the last macro (e.g., Ctrl+Shift+P).",
  "playMacroHotkey": "Ctrl+Shift+P"
} as const;
